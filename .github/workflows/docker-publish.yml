name: Docker

# on:
#   push:
#     branches: [ "main" ]
#     tags: [ 'v*.*.*' ]
#   pull_request:
#     branches: [ "main" ]

on:
  workflow_dispatch:
    inputs:
      caddy_ver:
        type: choice
        description: Caddy version
        options: 
        - 2.6.1
      crs_ver:
        type: choice
        description: CRS version
        options: 
        - 3.3.4

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: otzarri/caddy-coraza

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against Docker Hub
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,priority=200,prefix=,suffix=${{github.event.inputs.caddy_ver}}-crs-${{github.event.inputs.crs_ver}},value=

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          build-args: |
            CADDY_VER=${{github.event.inputs.caddy_ver}}
            CRS_VER=${{github.event.inputs.crs_ver}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          #tags: "${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{github.event.inputs.caddy_ver}}-crs-${{github.event.inputs.crs_ver}}"
